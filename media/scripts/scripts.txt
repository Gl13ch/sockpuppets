This folder contains text files with item, vehicles and recipe definitions.

Items, recipes, vehicles and similar stuff is defined in .txt files in the media/scripts/ directory. These files are separated into various { block } types. Within these blocks exist items properties: its name, how much it weighs, what type of item it is, how much time recipes take, what ingredients are required, how much horsepower a vehicle has, etc.

Each of the various block types has different attribute/value types, and syntax can vary slightly from other block types (items vs recipes), but the overall format is the same:

//Mod.info
name=My First Mod
poster=poster.png
id=MyFirst
description=Basic example mod
url="https://theindiestone.com/forums/",

//MODULE BASED-------------------------------------------------------------
/*
module MyMod {
    imports {
        Base
    }
    item MyItem
    {
        Type         = Normal,
        DisplayName  = My First Item,
        Icon         = MyIcon,
        Weight       = 0.1,
    }
}

*/

/*
module AuthenticZClothing {
  imports {
      Base
  }
    item Jacket_Grimes             // ClothingItem name
    {
        Type = Clothing,
        DisplayName = Rick's Jacket, // This is the name that appears in the inventory menu in-game.
        ClothingItem = Jacket_Grimes, // This is the name of the XML clothing item that you need to refer to correctly.
        BodyLocation = Jacket,        // This is connected with Bodylocations.lua which controls the restrictions on what combinations of clothing that your character can wear.
        Icon = JacketRick,            // Inventory icon for the jacket. The sprite is named item_JacketRick in the textures folder in the mod directory.
        BloodLocation = Jacket,
        RunSpeedModifier = 0.93,
        CombatSpeedModifier = 0.98,
        BiteDefense = 20,
        ScratchDefense = 30,
        NeckProtectionModifier = 0.5,
        Insulation = 0.7,
        WindResistance = 0.7,
        FabricType = Cotton,
        WaterResistance = 0.5,
        Weight = 2,
    }
}
*/

module SockPuppets {
    imports {
        Base
  }

  item SockPuppetSadge
  {
    Type = Clothing,
    DisplayName = Sock Puppet,
    ClothingItem = Puppet_Sadge,
    BodyLocation = HandsLeft,
    Icon = ,
    BloodLocation = HandsLeft,
    Insulation = 0.3,
    WindResistance = 0.30,
    FabricType = Cotton,
    Weight = 0.01,
  }

  item SockPuppetMadge
  {
    Type = Clothing,
    DisplayName = Sock Puppet,
    ClothingItem = Puppet_Madge,
    BodyLocation = HandsLeft,
    Icon = ,
    BloodLocation = HandsLeft,
    Insulation = 0.3,
    WindResistance = 0.30,
    FabricType = Cotton,
    Weight = 0.01,
  }

  item SockPuppet
  {
    Type = ,
    DisplayName = Sock Puppet,
    Icon = ,
    Weight = ,
  }
}

//RECIPE BLOCK----------------------------------------------------------
/*
recipe Open Box of Nails
{
    NailsBox,

    Result:Nails=20,
    Sound:PutItemInBag,
    Time:5.0,
}

recipe Place Nails in Box
{
    Nails=100,

    Result:NailsBox,
    Sound:PutItemInBag,
    Time:5.0,
}

recipe Slice Fillet
{
    keep KitchenKnife/HuntingKnife,
    Bass/Catfish/Perch/Crappie/Panfish/Pike/Trout,

    Result:FishFillet=2,
    Sound:SliceMeat,
    Time:50.0,
    OnTest:CutFish_TestIsValid,
    OnCreate:CutFish_OnCreate,
    Category:Cooking,
    OnGiveXP:Give10CookingXP,
}
*/
//RECIPE EXAMPLEs---------------------------------------------------------
recipe Sock Puppet Happy
{
  keep Needle/Thread,
  Sock/Broom,

  Result:SockPuppetOne=1,
  Sound:BroomSnapping,
  Time:5.0,
  Category:Tailoring,
  OnGiveXP:Give5TailoringXP,
}

//EVOLVED RECIPES--------------------------------------------------------------
/*
module Base {

item BreadSlices
 {
  DisplayName = Bread Slices,
  DisplayCategory = Food,
  Type = Food,
  Weight = 0.1,
  Icon = BreadSlices,
  DaysFresh = 3,
  DaysTotallyRotten = 6,
  HungerChange = -10,
  Calories = 177,
  Carbohydrates = 33,
  Lipids = 2.22,
  Proteins = 5.9,
  WorldStaticModel = BreadSlices,
 }

item Sandwich
 {
  DisplayName = Sandwich,
  DisplayCategory = Food,
  Type = Food,
  Weight = 0.2,
  Icon = Sandwich,
  DaysFresh = 3,
  DaysTotallyRotten = 6,
  HungerChange = -10,
  Calories = 360,
  Carbohydrates = 42,
  Lipids = 8.5,
  Proteins = 5.8,
  StaticModel = Sandwich,
  WorldStaticModel = CheeseSandwich,
 }

}

//EVOLVED INTO SANDWICH
module Base {

evolvedrecipe Sandwich
 {
  BaseItem:BreadSlices,
  MaxItems:4,
  ResultItem:Sandwich,
  Name:Make Sandwich,
 }
}
*/

//THE FIXING BLOCK-------------------------------------------------------------
/*
fixing Fix Baseball Bat
{
 Require : BaseballBat,

 Fixer : Woodglue=2; Woodwork=2,
 Fixer : DuctTape=2,
 Fixer : Glue=2,
 Fixer : Scotchtape=4,
}
*/
//FIXING EXAMPLE

fixing Fix Sock Puppet
{
  Require : Sock Puppet,

  Fixer : NeedleAndThread,
  Fixer : Patch/Strips,
}

//THE SOUND BLOCK--------------------------------------------------------------
/*
SwingSound	=	FirearmShotgun,
SoundRadius	=	200,

sound FirearmShotgun
{
    category = Item,
    clip
    {
        event = Weapons/Firearm/shotgun2,
        distanceMax = 200, //SoundRadius in items.txt
    }
}

sound Remington870
{
    category = Item,
    clip
    {
        file = media/sound/Remington870.ogg,
        distanceMax = 200,
    }
}
*/
